[gd_scene load_steps=6 format=3 uid="uid://do2kb21g6hmr6"]

[ext_resource type="PackedScene" uid="uid://bsno64b3uch1s" path="res://components/advanced-animated-player/player.tscn" id="2_q1did"]

[sub_resource type="GDScript" id="GDScript_2euv5"]
script/source = "extends Control

@export var player_scene: PackedScene
@export var multiplayer_spawner: MultiplayerSpawner
@export var terrain3d: Terrain3D

@onready var lobby_id_input: LineEdit = $VBoxContainer/LineEdit

var _session_started := false

func _ready() -> void:
	multiplayer_spawner.spawn_function = _spawn_player_from_data
	multiplayer.peer_connected.connect(func(pid):
		Bus.publish(\"peer_joined_session\", {\"peer_id\": pid})
		if multiplayer.is_server():
			_request_player_spawn(pid)
	)
	
	SteamManager.lobby_created.connect(_on_lobby_created_success)
	SteamManager.lobby_joined.connect(_on_lobby_joined_success)

func _request_player_spawn(peer_id: int):
	multiplayer_spawner.spawn(peer_id)

func _spawn_player_from_data(peer_id: int) -> Node:
	var player_inst = player_scene.instantiate()
	player_inst.name = str(peer_id)
	player_inst.set_multiplayer_authority(peer_id)
	Bus.publish(\"player_spawned\", {\"peer_id\": peer_id, \"player_node\": player_inst})
	return player_inst

func _on_create_pressed() -> void:
	SteamManager.create_steam_lobby()

func _on_join_pressed() -> void:
	var lobby_id = int(lobby_id_input.text)
	SteamManager.join_steam_lobby(lobby_id)

func _on_lobby_created_success(_success: bool, lobby_id: int):
	if _session_started:
		return
	Bus.publish(\"session_started\", {\"is_host\": true, \"peer_id\": multiplayer.get_unique_id()})
	Bus.publish(\"lobby_ui_hidden\")

	DisplayServer.clipboard_set(str(lobby_id))

	Steam.setLobbyData(lobby_id, \"host\", str(Steam.getSteamID()))
	var peer = SteamMultiplayerPeer.new()
	peer.create_host(1)
	multiplayer.multiplayer_peer = peer
	
	_request_player_spawn(multiplayer.get_unique_id())
	visible = false
	_session_started = true


func _on_lobby_joined_success(_success: bool, lobby_id: int):
	if _session_started:
		return
		
	var host_id = int(Steam.getLobbyData(lobby_id, \"host\"))
	var peer = SteamMultiplayerPeer.new()
	peer.create_client(host_id, 1)
	multiplayer.multiplayer_peer = peer
	visible = false
	_session_started = true

	Bus.publish(\"session_started\", {\"is_host\": false, \"peer_id\": multiplayer.get_unique_id()})
	Bus.publish(\"lobby_ui_hidden\")
"

[sub_resource type="ProceduralSkyMaterial" id="ProceduralSkyMaterial_wwtnh"]

[sub_resource type="Sky" id="Sky_q1did"]
sky_material = SubResource("ProceduralSkyMaterial_wwtnh")

[sub_resource type="Environment" id="Environment_prvkl"]
background_mode = 2
sky = SubResource("Sky_q1did")

[node name="root" type="Node3D"]

[node name="target" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 84.7045, 0)

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 0.842424, 0.538815, 0, -0.538815, 0.842424, 0, 5.14176, 0)

[node name="Control" type="Control" parent="." node_paths=PackedStringArray("multiplayer_spawner")]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_2euv5")
player_scene = ExtResource("2_q1did")
multiplayer_spawner = NodePath("../MultiplayerSpawner")
metadata/_edit_use_anchors_ = true

[node name="VBoxContainer" type="VBoxContainer" parent="Control"]
layout_mode = 1
anchors_preset = 14
anchor_top = 0.5
anchor_right = 1.0
anchor_bottom = 0.5
offset_top = -50.5
offset_bottom = 50.5
grow_horizontal = 2
grow_vertical = 2

[node name="create" type="Button" parent="Control/VBoxContainer"]
layout_mode = 2
text = "create"

[node name="join" type="Button" parent="Control/VBoxContainer"]
layout_mode = 2
text = "join"

[node name="LineEdit" type="LineEdit" parent="Control/VBoxContainer"]
layout_mode = 2

[node name="MultiplayerSpawner" type="MultiplayerSpawner" parent="."]
_spawnable_scenes = PackedStringArray("uid://bsno64b3uch1s")
spawn_path = NodePath("../target")
spawn_limit = 2

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_prvkl")

[connection signal="pressed" from="Control/VBoxContainer/create" to="Control" method="_on_create_pressed"]
[connection signal="pressed" from="Control/VBoxContainer/join" to="Control" method="_on_join_pressed"]
